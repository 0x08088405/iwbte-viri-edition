<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sWorldIcon</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>1337</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Init

sprite_index = noone;
timer = 0;

init();

// If you want a menu instead, go to to it
// It can set global.saveIndex and then invoke the following:
load(true, true);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Timer
if(global.timeTicking) {
    var dt = delta_time / 1000000;

    if(!global.timeWhileDead) {
        if(instance_exists(player)) {
            timer += dt;
        }
    } else timer += dt;


    if(timer &gt;= 1.0) {
        while(timer &gt; 1.0) {
            timer--;
            global.time++;
        }
        update_title();
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>    /// Keys

if(keyboard_check_pressed(global.k_restart)) {
    reset_triggers();
    load(false, false);
}

if(global.debug) {
    if(keyboard_check_pressed(global.k_debug_god)) {
        global.god = !global.god;
    }
    
    if(keyboard_check_pressed(global.k_debug_save)) {
        save(true);
        play_sound(seShoot);
    }
    
    if(keyboard_check_pressed(global.k_debug_flip)) {
        flip();
    }
    
    if(keyboard_check_pressed(global.k_debug_fps)) {
        var newFps = get_integer("FPS:", global.engineFPS);
        if(newFps &gt;= 1) {
            global.engineFPS = newFps;
            room_speed = global.engineFPS;
        }
    }
    
    // V-Align code in player
    
    if(keyboard_check_pressed(global.k_debug_decreaserm)) {
        if(room_exists(room - 1)) {
            if(room - 1 != rInit)
                room_goto(room - 1);
        }
    } else if(keyboard_check_pressed(global.k_debug_advancerm)) {
        if(room_exists(room + 1)) room_goto(room + 1);
    }
    
    if(keyboard_check_pressed(global.k_debug_hitbox)) {
        global.drawHitbox = !global.drawHitbox;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Ensure correct FPS
room_speed = global.engineFPS;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="75">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Debug UI

if(global.debugGui) {
    var textColor = c_white;
    var drawX = 5;
    var drawY = 5;
    
    draw_set_alpha(1.0);
    draw_set_font(debugFont);
    draw_set_halign(fa_left);
    draw_set_valign(fa_top);
    with(player) {
        var fpsreal = string(round(fps_real));
        var debugtext = "(" + string(x) + ", " + string(y) + ") "; // Coordinates
        debugtext += "align " + string(x % 3) + " @ "; // H-Align
        debugtext += room_get_name(room); // Room Name
        debugtext += " / " + fpsreal + " fps ";
        
        for(var i = 0; i &lt; (4 - string_length(fpsreal)); i++)
            debugtext += " ";
        
        debugtext += "(" + string(round(fps)) + " apparent)";
        
        if(global.god)
            debugtext += " [god]";
        
        draw_set_color(textColor);
        draw_text(5, 5, debugtext);
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
